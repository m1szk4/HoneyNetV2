---
# HoneyNetV2 System Hardening Playbook
# This playbook hardens the host system, configures firewall rules,
# and implements DMZ network policies for honeypot isolation.

- name: System Hardening and DMZ Configuration
  hosts: honeynet
  become: yes
  vars:
    # Ports exposed by honeypots (incoming traffic allowed)
    honeypot_ports:
      - 22      # SSH (Cowrie)
      - 23      # Telnet (Cowrie)
      - 2323    # Telnet alt (Cowrie)
      - 21      # FTP (Dionaea)
      - 80      # HTTP (Dionaea)
      - 443     # HTTPS (Dionaea)
      - 445     # SMB (Dionaea)
      - 3306    # MySQL (Dionaea)
      - 8080    # HTTP alt (Dionaea)
      - 502     # Modbus (Conpot)
      - 161     # SNMP (Conpot)
      - 47808   # BACnet (Conpot)
      - 623     # IPMI (Conpot)

    # Management ports (restricted access)
    management_ports:
      - 3000    # Grafana
      - 8888    # Jupyter

    # SSH port for actual host management (if different from 22)
    admin_ssh_port: 2222

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Upgrade all packages
      apt:
        upgrade: dist
        autoremove: yes
        autoclean: yes

    - name: Install essential security packages
      apt:
        name:
          - ufw
          - fail2ban
          - unattended-upgrades
          - apt-listchanges
          - rsyslog
          - auditd
          - aide
          - rkhunter
          - iptables-persistent
        state: present

    - name: Configure automatic security updates
      copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        content: |
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}-security";
              "${distro_id}ESMApps:${distro_codename}-apps-security";
              "${distro_id}ESM:${distro_codename}-infra-security";
          };
          Unattended-Upgrade::AutoFixInterruptedDpkg "true";
          Unattended-Upgrade::MinimalSteps "true";
          Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";
          Unattended-Upgrade::Remove-Unused-Dependencies "true";
          Unattended-Upgrade::Automatic-Reboot "false";

    - name: Disable unnecessary services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - bluetooth
        - cups
        - avahi-daemon
      ignore_errors: yes

    - name: Set system-wide file descriptor limits
      sysctl:
        name: fs.file-max
        value: '2097152'
        state: present
        reload: yes

    - name: Set network performance tuning
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: 'net.core.somaxconn', value: '65535' }
        - { name: 'net.ipv4.tcp_max_syn_backlog', value: '8192' }
        - { name: 'net.core.netdev_max_backlog', value: '5000' }
        - { name: 'net.ipv4.ip_forward', value: '0' }  # Disable IP forwarding for security
        - { name: 'net.ipv4.conf.all.accept_source_route', value: '0' }
        - { name: 'net.ipv4.conf.all.accept_redirects', value: '0' }
        - { name: 'net.ipv4.conf.all.send_redirects', value: '0' }
        - { name: 'net.ipv4.conf.all.log_martians', value: '1' }
        - { name: 'net.ipv4.icmp_echo_ignore_broadcasts', value: '1' }
        - { name: 'net.ipv4.icmp_ignore_bogus_error_responses', value: '1' }

    - name: Configure rsyslog for security monitoring
      copy:
        dest: /etc/rsyslog.d/50-honeypot.conf
        content: |
          # HoneyNet security logging
          auth,authpriv.*                 /var/log/auth.log
          *.*;auth,authpriv.none          /var/log/syslog
          kern.*                          /var/log/kern.log

          # Docker container logs
          :programname, isequal, "docker" /var/log/docker.log

          # Rotate and compress logs
          $ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
      notify: Restart rsyslog

    - name: Reset UFW to default state
      ufw:
        state: reset

    - name: Set UFW default policies (deny all incoming)
      ufw:
        direction: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      loop:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
        - { direction: 'routed', policy: 'deny' }

    - name: Allow SSH for management (custom port if specified)
      ufw:
        rule: allow
        port: "{{ admin_ssh_port }}"
        proto: tcp
        comment: 'SSH management access'

    - name: Allow honeypot ports (TCP)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        comment: "Honeypot service port {{ item }}"
      loop: "{{ honeypot_ports }}"

    - name: Allow honeypot ports (UDP) for ICS protocols
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: udp
        comment: "Honeypot UDP service {{ item }}"
      loop:
        - 161    # SNMP
        - 47808  # BACnet
        - 623    # IPMI

    - name: Allow management UI ports (consider restricting by source IP)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        comment: "Management interface {{ item }}"
      loop: "{{ management_ports }}"

    - name: Enable UFW
      ufw:
        state: enabled

    - name: Configure iptables for Docker network isolation (DMZ)
      blockinfile:
        path: /etc/iptables/rules.v4
        create: yes
        block: |
          # HoneyNet DMZ isolation rules
          # Block outbound traffic from honeypot containers (172.20.0.0/24)
          *filter
          # Allow established connections back to honeypots
          -A DOCKER-USER -i docker0 -s 172.20.0.0/24 -m state --state ESTABLISHED,RELATED -j ACCEPT
          # Block new outbound connections from honeypot network
          -A DOCKER-USER -i docker0 -s 172.20.0.0/24 -j DROP
          # Allow all traffic from management network
          -A DOCKER-USER -s 172.21.0.0/24 -j ACCEPT
          COMMIT
      notify: Reload iptables

    - name: Disable Docker default iptables for honeypot network
      lineinfile:
        path: /etc/docker/daemon.json
        create: yes
        line: '{ "iptables": true, "userland-proxy": false }'
        insertbefore: BOF
      notify: Restart Docker

    - name: Configure fail2ban for SSH protection
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 3600
          findtime = 600
          maxretry = 3

          [sshd]
          enabled = true
          port = {{ admin_ssh_port }}
          logpath = /var/log/auth.log
      notify: Restart fail2ban

    - name: Ensure fail2ban is running
      systemd:
        name: fail2ban
        state: started
        enabled: yes

    - name: Create honeypot data directories with proper permissions
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      loop:
        - /opt/honeynet
        - /opt/honeynet/data
        - /opt/honeynet/configs
        - /opt/honeynet/logs

    - name: Set resource limits for intensive traffic
      pam_limits:
        domain: '*'
        limit_type: "{{ item.type }}"
        limit_item: "{{ item.item }}"
        value: "{{ item.value }}"
      loop:
        - { type: 'soft', item: 'nofile', value: '65536' }
        - { type: 'hard', item: 'nofile', value: '65536' }
        - { type: 'soft', item: 'nproc', value: '32768' }
        - { type: 'hard', item: 'nproc', value: '32768' }

  handlers:
    - name: Restart rsyslog
      systemd:
        name: rsyslog
        state: restarted

    - name: Reload iptables
      shell: iptables-restore < /etc/iptables/rules.v4

    - name: Restart Docker
      systemd:
        name: docker
        state: restarted

    - name: Restart fail2ban
      systemd:
        name: fail2ban
        state: restarted
